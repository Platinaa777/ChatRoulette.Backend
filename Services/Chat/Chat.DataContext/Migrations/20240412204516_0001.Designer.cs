// <auto-generated />
using System;
using Chat.DataContext.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Chat.DataContext.Migrations
{
    [DbContext(typeof(ChatDbContext))]
    [Migration("20240412204516_0001")]
    partial class _0001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Chat.Domain.Aggregates.Game.Round", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("CorrectWord")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("correct_word");

                    b.Property<string>("FirstPlayerAnswer")
                        .HasColumnType("text")
                        .HasColumnName("player1_answer");

                    b.Property<DateTime?>("FirstPlayerAnswerTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("player1_answer_time");

                    b.Property<string>("FirstPlayerEmail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("player1_email");

                    b.Property<string>("SecondPlayerAnswer")
                        .HasColumnType("text")
                        .HasColumnName("player2_answer");

                    b.Property<DateTime?>("SecondPlayerAnswerTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("player2_answer_time");

                    b.Property<string>("SecondPlayerEmail")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("player2_email");

                    b.HasKey("Id");

                    b.ToTable("rounds", (string)null);
                });

            modelBuilder.Entity("Chat.Domain.Aggregates.Game.TranslationGame", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ChooseList")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("options");

                    b.Property<string>("CorrectTranslation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("correct_word");

                    b.Property<string>("WordToTranslate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("word");

                    b.HasKey("Id");

                    b.ToTable("translation_games", (string)null);
                });

            modelBuilder.Entity("Chat.Domain.Aggregates.Room.ChatUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("connection_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("Points")
                        .HasColumnType("integer")
                        .HasColumnName("points");

                    b.Property<string>("PreviousParticipantEmails")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("peers_list");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("chat_users", (string)null);
                });

            modelBuilder.Entity("Chat.Domain.Aggregates.Room.TwoSeatsRoom", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("closed_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("PeerLinks")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("peers_emails");

                    b.HasKey("Id");

                    b.ToTable("rooms", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
