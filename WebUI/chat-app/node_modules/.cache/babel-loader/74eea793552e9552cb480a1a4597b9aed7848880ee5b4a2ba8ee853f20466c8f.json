{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mosToScore = exports.calculateMOS = void 0;\nvar r0 = 94.768; // Constant used in computing \"rFactor\".\n// copied from https://code.hq.twilio.com/client/sdk-frd/blob/master/voice/voice-mos-calculation.md\nfunction calculateMOS(rtt, jitter, fractionLost) {\n  // Compute the effective latency.\n  var effectiveLatency = rtt + jitter * 2 + 10;\n  // Compute the initial \"rFactor\" from effective latency.\n  var rFactor = 0;\n  switch (true) {\n    case effectiveLatency < 160:\n      rFactor = r0 - effectiveLatency / 40;\n      break;\n    case effectiveLatency < 1000:\n      rFactor = r0 - (effectiveLatency - 120) / 10;\n      break;\n  }\n  // Adjust \"rFactor\" with the fraction of packets lost.\n  switch (true) {\n    case fractionLost <= rFactor / 2.5:\n      rFactor = Math.max(rFactor - fractionLost * 2.5, 6.52);\n      break;\n    default:\n      rFactor = 0;\n      break;\n  }\n  // Compute MOS from \"rFactor\".\n  var mos = 1 + 0.035 * rFactor + 0.000007 * rFactor * (rFactor - 60) * (100 - rFactor);\n  return mos;\n}\nexports.calculateMOS = calculateMOS;\nfunction mosToScore(mosValue) {\n  var score = 0;\n  if (!mosValue) {\n    score = 0;\n  } else if (mosValue > 4.2) {\n    score = 5;\n  } else if (mosValue > 4.0) {\n    score = 4;\n  } else if (mosValue > 3.6) {\n    score = 3;\n  } else if (mosValue > 3) {\n    score = 2;\n  } else {\n    score = 1;\n  }\n  return score;\n}\nexports.mosToScore = mosToScore;","map":{"version":3,"names":["r0","calculateMOS","rtt","jitter","fractionLost","effectiveLatency","rFactor","Math","max","mos","exports","mosToScore","mosValue","score"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/node_modules/twilio-video/lib/preflight/mos.ts"],"sourcesContent":["const r0 = 94.768; // Constant used in computing \"rFactor\".\n// copied from https://code.hq.twilio.com/client/sdk-frd/blob/master/voice/voice-mos-calculation.md\nexport function calculateMOS(rtt: number, jitter: number, fractionLost: number): number {\n  // Compute the effective latency.\n  const effectiveLatency: number = rtt + (jitter * 2) + 10;\n\n  // Compute the initial \"rFactor\" from effective latency.\n  let rFactor = 0;\n  switch (true) {\n    case effectiveLatency < 160:\n      rFactor = r0 - (effectiveLatency / 40);\n      break;\n    case effectiveLatency < 1000:\n      rFactor = r0 - ((effectiveLatency - 120) / 10);\n      break;\n  }\n\n  // Adjust \"rFactor\" with the fraction of packets lost.\n  switch (true) {\n    case fractionLost <= (rFactor / 2.5):\n      rFactor = Math.max(rFactor - fractionLost * 2.5, 6.52);\n      break;\n    default:\n      rFactor = 0;\n      break;\n  }\n\n  // Compute MOS from \"rFactor\".\n  const mos: number = 1 +\n    (0.035 * rFactor) +\n    (0.000007 * rFactor) *\n    (rFactor - 60) *\n    (100 - rFactor);\n\n  return mos;\n}\n\nexport function mosToScore(mosValue: number|null|undefined): number {\n  let score = 0;\n  if (!mosValue) {\n    score = 0;\n  } else if  (mosValue > 4.2) {\n    score = 5;\n  } else if  (mosValue > 4.0) {\n    score = 4;\n  } else if  (mosValue > 3.6) {\n    score = 3;\n  } else if  (mosValue > 3) {\n    score = 2;\n  } else  {\n    score = 1;\n  }\n  return score;\n}\n"],"mappings":";;;;;;AAAA,IAAMA,EAAE,GAAG,MAAM,CAAC,CAAC;AACnB;AACA,SAAgBC,YAAYA,CAACC,GAAW,EAAEC,MAAc,EAAEC,YAAoB;EAC5E;EACA,IAAMC,gBAAgB,GAAWH,GAAG,GAAIC,MAAM,GAAG,CAAE,GAAG,EAAE;EAExD;EACA,IAAIG,OAAO,GAAG,CAAC;EACf,QAAQ,IAAI;IACV,KAAKD,gBAAgB,GAAG,GAAG;MACzBC,OAAO,GAAGN,EAAE,GAAIK,gBAAgB,GAAG,EAAG;MACtC;IACF,KAAKA,gBAAgB,GAAG,IAAI;MAC1BC,OAAO,GAAGN,EAAE,GAAI,CAACK,gBAAgB,GAAG,GAAG,IAAI,EAAG;MAC9C;;EAGJ;EACA,QAAQ,IAAI;IACV,KAAKD,YAAY,IAAKE,OAAO,GAAG,GAAI;MAClCA,OAAO,GAAGC,IAAI,CAACC,GAAG,CAACF,OAAO,GAAGF,YAAY,GAAG,GAAG,EAAE,IAAI,CAAC;MACtD;IACF;MACEE,OAAO,GAAG,CAAC;MACX;;EAGJ;EACA,IAAMG,GAAG,GAAW,CAAC,GAClB,KAAK,GAAGH,OAAQ,GAChB,QAAQ,GAAGA,OAAO,IAClBA,OAAO,GAAG,EAAE,CAAC,IACb,GAAG,GAAGA,OAAO,CAAC;EAEjB,OAAOG,GAAG;AACZ;AAjCAC,OAAA,CAAAT,YAAA,GAAAA,YAAA;AAmCA,SAAgBU,UAAUA,CAACC,QAA+B;EACxD,IAAIC,KAAK,GAAG,CAAC;EACb,IAAI,CAACD,QAAQ,EAAE;IACbC,KAAK,GAAG,CAAC;GACV,MAAM,IAAKD,QAAQ,GAAG,GAAG,EAAE;IAC1BC,KAAK,GAAG,CAAC;GACV,MAAM,IAAKD,QAAQ,GAAG,GAAG,EAAE;IAC1BC,KAAK,GAAG,CAAC;GACV,MAAM,IAAKD,QAAQ,GAAG,GAAG,EAAE;IAC1BC,KAAK,GAAG,CAAC;GACV,MAAM,IAAKD,QAAQ,GAAG,CAAC,EAAE;IACxBC,KAAK,GAAG,CAAC;GACV,MAAO;IACNA,KAAK,GAAG,CAAC;;EAEX,OAAOA,KAAK;AACd;AAhBAH,OAAA,CAAAC,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}