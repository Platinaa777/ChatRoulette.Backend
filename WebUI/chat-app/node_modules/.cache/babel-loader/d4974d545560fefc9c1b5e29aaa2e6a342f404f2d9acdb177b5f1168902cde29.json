{"ast":null,"code":"'use strict';\n\nvar defer = require('./').defer;\n/**\n * This is a pair of Deferreds that are set whenever local media is muted and\n * resolved whenever local media is unmuted/ended and restarted if necessary.\n */\nvar LocalMediaRestartDeferreds = /** @class */function () {\n  /**\n   * Constructor.\n   */\n  function LocalMediaRestartDeferreds() {\n    Object.defineProperties(this, {\n      _audio: {\n        value: defer(),\n        writable: true\n      },\n      _video: {\n        value: defer(),\n        writable: true\n      }\n    });\n    // Initially, resolve both the Deferreds.\n    this._audio.resolve();\n    this._video.resolve();\n  }\n  /**\n   * Resolve the Deferred for audio or video.\n   * @param {'audio'|'video'} kind\n   */\n  LocalMediaRestartDeferreds.prototype.resolveDeferred = function (kind) {\n    if (kind === 'audio') {\n      this._audio.resolve();\n    } else {\n      this._video.resolve();\n    }\n  };\n  /**\n   * Start the Deferred for audio or video.\n   * @param {'audio' | 'video'} kind\n   */\n  LocalMediaRestartDeferreds.prototype.startDeferred = function (kind) {\n    if (kind === 'audio') {\n      this._audio = defer();\n    } else {\n      this._video = defer();\n    }\n  };\n  /**\n   * Wait until the Deferred for audio or video is resolved.\n   * @param {'audio'|'video'} kind\n   * @returns {Promise<void>}\n   */\n  LocalMediaRestartDeferreds.prototype.whenResolved = function (kind) {\n    return kind === 'audio' ? this._audio.promise : this._video.promise;\n  };\n  return LocalMediaRestartDeferreds;\n}();\nmodule.exports = new LocalMediaRestartDeferreds();","map":{"version":3,"names":["defer","require","LocalMediaRestartDeferreds","Object","defineProperties","_audio","value","writable","_video","resolve","prototype","resolveDeferred","kind","startDeferred","whenResolved","promise","module","exports"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/node_modules/twilio-video/lib/util/localmediarestartdeferreds.js"],"sourcesContent":["'use strict';\n\nconst { defer } = require('./');\n\n/**\n * This is a pair of Deferreds that are set whenever local media is muted and\n * resolved whenever local media is unmuted/ended and restarted if necessary.\n */\nclass LocalMediaRestartDeferreds {\n  /**\n   * Constructor.\n   */\n  constructor() {\n    Object.defineProperties(this, {\n      _audio: {\n        value: defer(),\n        writable: true\n      },\n      _video: {\n        value: defer(),\n        writable: true\n      }\n    });\n\n    // Initially, resolve both the Deferreds.\n    this._audio.resolve();\n    this._video.resolve();\n  }\n\n  /**\n   * Resolve the Deferred for audio or video.\n   * @param {'audio'|'video'} kind\n   */\n  resolveDeferred(kind) {\n    if (kind === 'audio') {\n      this._audio.resolve();\n    } else {\n      this._video.resolve();\n    }\n  }\n\n  /**\n   * Start the Deferred for audio or video.\n   * @param {'audio' | 'video'} kind\n   */\n  startDeferred(kind) {\n    if (kind === 'audio') {\n      this._audio = defer();\n    } else {\n      this._video = defer();\n    }\n  }\n\n  /**\n   * Wait until the Deferred for audio or video is resolved.\n   * @param {'audio'|'video'} kind\n   * @returns {Promise<void>}\n   */\n  whenResolved(kind) {\n    return kind === 'audio' ? this._audio.promise : this._video.promise;\n  }\n}\n\nmodule.exports = new LocalMediaRestartDeferreds();\n"],"mappings":"AAAA,YAAY;;AAEJ,IAAAA,KAAK,GAAKC,OAAO,CAAC,IAAI,CAAC,CAAAD,KAAlB;AAEb;;;;AAIA,IAAAE,0BAAA;EACE;;;EAGA,SAAAA,2BAAA;IACEC,MAAM,CAACC,gBAAgB,CAAC,IAAI,EAAE;MAC5BC,MAAM,EAAE;QACNC,KAAK,EAAEN,KAAK,EAAE;QACdO,QAAQ,EAAE;OACX;MACDC,MAAM,EAAE;QACNF,KAAK,EAAEN,KAAK,EAAE;QACdO,QAAQ,EAAE;;KAEb,CAAC;IAEF;IACA,IAAI,CAACF,MAAM,CAACI,OAAO,EAAE;IACrB,IAAI,CAACD,MAAM,CAACC,OAAO,EAAE;EACvB;EAEA;;;;EAIAP,0BAAA,CAAAQ,SAAA,CAAAC,eAAe,GAAf,UAAgBC,IAAI;IAClB,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,IAAI,CAACP,MAAM,CAACI,OAAO,EAAE;KACtB,MAAM;MACL,IAAI,CAACD,MAAM,CAACC,OAAO,EAAE;;EAEzB,CAAC;EAED;;;;EAIAP,0BAAA,CAAAQ,SAAA,CAAAG,aAAa,GAAb,UAAcD,IAAI;IAChB,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,IAAI,CAACP,MAAM,GAAGL,KAAK,EAAE;KACtB,MAAM;MACL,IAAI,CAACQ,MAAM,GAAGR,KAAK,EAAE;;EAEzB,CAAC;EAED;;;;;EAKAE,0BAAA,CAAAQ,SAAA,CAAAI,YAAY,GAAZ,UAAaF,IAAI;IACf,OAAOA,IAAI,KAAK,OAAO,GAAG,IAAI,CAACP,MAAM,CAACU,OAAO,GAAG,IAAI,CAACP,MAAM,CAACO,OAAO;EACrE,CAAC;EACH,OAAAb,0BAAC;AAAD,CAAC,CArDD;AAuDAc,MAAM,CAACC,OAAO,GAAG,IAAIf,0BAA0B,EAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}