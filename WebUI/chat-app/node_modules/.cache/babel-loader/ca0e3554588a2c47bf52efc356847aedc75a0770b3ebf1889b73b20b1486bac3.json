{"ast":null,"code":"var _jsxFileName = \"/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/src/components/TwilioVideo.jsx\",\n  _s = $RefreshSig$();\nimport Video from 'twilio-video';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TwilioVideo = () => {\n  _s();\n  const [roomName, setRoomName] = useState('');\n  const [token, setToken] = useState('');\n  const [videoRoom, setVideoRoom] = useState(null);\n\n  // useEffect(() => {\n  //     // Функция для получения токена и имени комнаты от сервера\n  //     const fetchTokenAndRoomName = async () => {\n  //         try {\n  //             const response = await fetch('your-backend-url-to-get-token-and-room');\n  //             const data = await response.json();\n  //             setToken(data.token);\n  //             setRoomName(data.roomName);\n  //         } catch (error) {\n  //             console.error('Error fetching token and room name:', error);\n  //         }\n  //     };\n  //\n  //     fetchTokenAndRoomName();\n  // }, []);\n\n  const joinVideoRoom = async () => {\n    setRoomName('DailyStandup');\n    setToken('RM0f904a37c163b299cb6d9aab1cd105e5');\n    try {\n      const videoRoom = await Video.connect(token, {\n        name: roomName\n      });\n      setVideoRoom(videoRoom);\n    } catch (error) {\n      console.error('Error connecting to video room:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Twilio Video Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinVideoRoom,\n      children: \"Join Video Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), videoRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [videoRoom.localParticipant.videoTracks.map(track => /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: ref => track.attach(ref)\n      }, track.sid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)), videoRoom.participants.map(participant => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: participant.videoTracks.map(track => /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: ref => track.attach(ref)\n        }, track.sid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this))\n      }, participant.sid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(TwilioVideo, \"ZVexXvhNkAHrtfA1EebBNmmyh/I=\");\n_c = TwilioVideo;\nexport default TwilioVideo;\nvar _c;\n$RefreshReg$(_c, \"TwilioVideo\");","map":{"version":3,"names":["Video","jsxDEV","_jsxDEV","TwilioVideo","_s","roomName","setRoomName","useState","token","setToken","videoRoom","setVideoRoom","joinVideoRoom","connect","name","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","localParticipant","videoTracks","map","track","ref","attach","sid","participants","participant","_c","$RefreshReg$"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/src/components/TwilioVideo.jsx"],"sourcesContent":["import Video from 'twilio-video';\n\nconst TwilioVideo = () => {\n    const [roomName, setRoomName] = useState('');\n    const [token, setToken] = useState('');\n    const [videoRoom, setVideoRoom] = useState(null);\n\n    // useEffect(() => {\n    //     // Функция для получения токена и имени комнаты от сервера\n    //     const fetchTokenAndRoomName = async () => {\n    //         try {\n    //             const response = await fetch('your-backend-url-to-get-token-and-room');\n    //             const data = await response.json();\n    //             setToken(data.token);\n    //             setRoomName(data.roomName);\n    //         } catch (error) {\n    //             console.error('Error fetching token and room name:', error);\n    //         }\n    //     };\n    //\n    //     fetchTokenAndRoomName();\n    // }, []);\n\n    const joinVideoRoom = async () => {\n        setRoomName('DailyStandup');\n        setToken('RM0f904a37c163b299cb6d9aab1cd105e5');\n        try {\n            const videoRoom = await Video.connect(token, {\n                name: roomName\n            });\n            setVideoRoom(videoRoom);\n        } catch (error) {\n            console.error('Error connecting to video room:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Twilio Video Component</h1>\n            <button onClick={joinVideoRoom}>Join Video Room</button>\n            {/* Видео-компоненты для отображения видео-потока */}\n            {videoRoom && (\n                <div>\n                    {videoRoom.localParticipant.videoTracks.map(track => (\n                        <video key={track.sid} ref={ref => track.attach(ref)} />\n                    ))}\n                    {videoRoom.participants.map(participant => (\n                        <div key={participant.sid}>\n                            {participant.videoTracks.map(track => (\n                                <video key={track.sid} ref={ref => track.attach(ref)} />\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TwilioVideo;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9BN,WAAW,CAAC,cAAc,CAAC;IAC3BG,QAAQ,CAAC,oCAAoC,CAAC;IAC9C,IAAI;MACA,MAAMC,SAAS,GAAG,MAAMV,KAAK,CAACa,OAAO,CAACL,KAAK,EAAE;QACzCM,IAAI,EAAET;MACV,CAAC,CAAC;MACFM,YAAY,CAACD,SAAS,CAAC;IAC3B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D;EACJ,CAAC;EAED,oBACIb,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BnB,OAAA;MAAQoB,OAAO,EAAEV,aAAc;MAAAK,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEvDX,SAAS,iBACNR,OAAA;MAAAe,QAAA,GACKP,SAAS,CAACa,gBAAgB,CAACC,WAAW,CAACC,GAAG,CAACC,KAAK,iBAC7CxB,OAAA;QAAuByB,GAAG,EAAEA,GAAG,IAAID,KAAK,CAACE,MAAM,CAACD,GAAG;MAAE,GAAzCD,KAAK,CAACG,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAC1D,CAAC,EACDX,SAAS,CAACoB,YAAY,CAACL,GAAG,CAACM,WAAW,iBACnC7B,OAAA;QAAAe,QAAA,EACKc,WAAW,CAACP,WAAW,CAACC,GAAG,CAACC,KAAK,iBAC9BxB,OAAA;UAAuByB,GAAG,EAAEA,GAAG,IAAID,KAAK,CAACE,MAAM,CAACD,GAAG;QAAE,GAAzCD,KAAK,CAACG,GAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkC,CAC1D;MAAC,GAHIU,WAAW,CAACF,GAAG;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIpB,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjB,EAAA,CAvDID,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAyDjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}