{"ast":null,"code":"/* globals navigator */\n'use strict';\n\n/**\n * This function is very similar to <code>navigator.mediaDevices.getUserMedia</code>\n * except that if no MediaStreamConstraints are provided, then bot audio and video\n * are requested.\n * @function getUserMedia\n * @param {MediaStreamConstraints} [constraints={audio:true,video:true}] - the\n *   MediaStreamConstraints object specifying what kind of MediaStream to\n *   request from the browser (by default both audio and video)\n * @returns Promise<MediaStream>\n */\nfunction getUserMedia(constraints) {\n  if (constraints === void 0) {\n    constraints = {\n      audio: true,\n      video: true\n    };\n  }\n  if (typeof navigator === 'object' && typeof navigator.mediaDevices === 'object' && typeof navigator.mediaDevices.getUserMedia === 'function') {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  return Promise.reject(new Error('getUserMedia is not supported'));\n}\nmodule.exports = getUserMedia;","map":{"version":3,"names":["getUserMedia","constraints","audio","video","navigator","mediaDevices","Promise","reject","Error","module","exports"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/node_modules/twilio-video/lib/webrtc/getusermedia.js"],"sourcesContent":["/* globals navigator */\n'use strict';\n\n/**\n * This function is very similar to <code>navigator.mediaDevices.getUserMedia</code>\n * except that if no MediaStreamConstraints are provided, then bot audio and video\n * are requested.\n * @function getUserMedia\n * @param {MediaStreamConstraints} [constraints={audio:true,video:true}] - the\n *   MediaStreamConstraints object specifying what kind of MediaStream to\n *   request from the browser (by default both audio and video)\n * @returns Promise<MediaStream>\n */\nfunction getUserMedia(constraints = { audio: true, video: true }) {\n  if (typeof navigator === 'object'\n    && typeof navigator.mediaDevices === 'object'\n    && typeof navigator.mediaDevices.getUserMedia === 'function') {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n  return Promise.reject(new Error('getUserMedia is not supported'));\n}\n\nmodule.exports = getUserMedia;\n"],"mappings":"AAAA;AACA,YAAY;;AAEZ;;;;;;;;;;AAUA,SAASA,YAAYA,CAACC,WAA0C;EAA1C,IAAAA,WAAA;IAAAA,WAAA;MAAgBC,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAI,CAAE;EAAA;EAC9D,IAAI,OAAOC,SAAS,KAAK,QAAQ,IAC5B,OAAOA,SAAS,CAACC,YAAY,KAAK,QAAQ,IAC1C,OAAOD,SAAS,CAACC,YAAY,CAACL,YAAY,KAAK,UAAU,EAAE;IAC9D,OAAOI,SAAS,CAACC,YAAY,CAACL,YAAY,CAACC,WAAW,CAAC;;EAEzD,OAAOK,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,+BAA+B,CAAC,CAAC;AACnE;AAEAC,MAAM,CAACC,OAAO,GAAGV,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}