{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar average = require('./average');\nvar SenderOrReceiverReport = require('./senderorreceiverreport');\nvar sum = require('./sum');\n/**\n * @interface ReceiverSummary\n * @property {number} bitrate\n * @property {number} fractionLost - 0–1\n * @property {number} [jitter] - s (undefined for video tracks in Chrome)\n */\n/**\n * @extends SenderOrReceiverReport\n * @property {number} deltaPacketsLost\n * @property {number} deltaPacketsReceived\n * @property {number} [fractionLost] - 0–1 (undefined in Firefox)\n * @property {number} [jitter] - s (undefined for video tracks in Chrome)\n * @property {number} phonyPacketsLost - 0–1\n */\nvar ReceiverReport = /** @class */function (_super) {\n  __extends(ReceiverReport, _super);\n  /**\n   * @param {StatsId} id\n   * @param {TrackId} trackId\n   * @param {number} bitrate - bps\n   * @param {number} deltaPacketsLost\n   * @param {number} deltaPacketsReceived\n   * @param {number} [fractionLost] - 0–1 (undefined in Firefox)\n   * @param {number} [jitter] - s (undefined for video tracks in Chrome)\n   */\n  function ReceiverReport(id, trackId, bitrate, deltaPacketsLost, deltaPacketsReceived, fractionLost, jitter) {\n    var _this = _super.call(this, id, trackId, bitrate) || this;\n    var phonyFractionLost = deltaPacketsReceived > 0 ? deltaPacketsLost / deltaPacketsReceived : 0;\n    Object.defineProperties(_this, {\n      deltaPacketsLost: {\n        enumerable: true,\n        value: deltaPacketsLost\n      },\n      deltaPacketsReceived: {\n        enumerable: true,\n        value: deltaPacketsReceived\n      },\n      fractionLost: {\n        enumerable: true,\n        value: fractionLost\n      },\n      jitter: {\n        enumerable: true,\n        value: jitter\n      },\n      phonyFractionLost: {\n        enumerable: true,\n        value: phonyFractionLost\n      }\n    });\n    return _this;\n  }\n  /**\n   * Create a {@link ReceiverReport}.\n   * @param {string} trackId\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @returns {ReceiverReport}\n   */\n  ReceiverReport.of = function (trackId, olderStats, newerStats) {\n    if (olderStats.id !== newerStats.id) {\n      throw new Error('RTCStats IDs must match');\n    }\n    var secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n    var deltaBytesReceived = newerStats.bytesReceived - olderStats.bytesReceived;\n    var bitrate = secondsElapsed > 0 ? deltaBytesReceived / secondsElapsed * 8 : 0;\n    var deltaPacketsLost = Math.max(newerStats.packetsLost - olderStats.packetsLost, 0);\n    var deltaPacketsReceived = newerStats.packetsReceived - olderStats.packetsReceived;\n    var fractionLost = newerStats.fractionLost,\n      jitter = newerStats.jitter;\n    return new ReceiverReport(olderStats.id, trackId, bitrate, deltaPacketsLost, deltaPacketsReceived, fractionLost, jitter);\n  };\n  /**\n   * Summarize {@link ReceiverReport}s by summing and averaging their values.\n   * @param {Array<ReceiverReport>} reports\n   * @returns {ReceiverSummary}\n   */\n  ReceiverReport.summarize = function (reports) {\n    var summaries = reports.map(function (report) {\n      return report.summarize();\n    });\n    var bitrate = sum(summaries.map(function (summary) {\n      return summary.bitrate;\n    }));\n    var fractionLost = average(summaries.map(function (summary) {\n      return summary.fractionLost;\n    }));\n    var jitter = average(summaries.map(function (summary) {\n      return summary.jitter;\n    }));\n    return {\n      bitrate: bitrate,\n      fractionLost: fractionLost,\n      jitter: jitter\n    };\n  };\n  /**\n   * Summarize the {@link ReceiveReport}.\n   * @returns {ReceiverSummary}\n   */\n  ReceiverReport.prototype.summarize = function () {\n    return {\n      bitrate: this.bitrate,\n      fractionLost: typeof this.fractionLost === 'number' ? this.fractionLost : this.phonyFractionLost,\n      jitter: this.jitter\n    };\n  };\n  return ReceiverReport;\n}(SenderOrReceiverReport);\nmodule.exports = ReceiverReport;","map":{"version":3,"names":["average","require","SenderOrReceiverReport","sum","ReceiverReport","_super","__extends","id","trackId","bitrate","deltaPacketsLost","deltaPacketsReceived","fractionLost","jitter","_this","call","phonyFractionLost","Object","defineProperties","enumerable","value","of","olderStats","newerStats","Error","secondsElapsed","timestamp","deltaBytesReceived","bytesReceived","Math","max","packetsLost","packetsReceived","summarize","reports","summaries","map","report","summary","prototype","module","exports"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/node_modules/twilio-video/lib/stats/receiverreport.js"],"sourcesContent":["'use strict';\n\nconst average = require('./average');\nconst SenderOrReceiverReport = require('./senderorreceiverreport');\nconst sum = require('./sum');\n\n/**\n * @interface ReceiverSummary\n * @property {number} bitrate\n * @property {number} fractionLost - 0–1\n * @property {number} [jitter] - s (undefined for video tracks in Chrome)\n */\n\n/**\n * @extends SenderOrReceiverReport\n * @property {number} deltaPacketsLost\n * @property {number} deltaPacketsReceived\n * @property {number} [fractionLost] - 0–1 (undefined in Firefox)\n * @property {number} [jitter] - s (undefined for video tracks in Chrome)\n * @property {number} phonyPacketsLost - 0–1\n */\nclass ReceiverReport extends SenderOrReceiverReport {\n  /**\n   * @param {StatsId} id\n   * @param {TrackId} trackId\n   * @param {number} bitrate - bps\n   * @param {number} deltaPacketsLost\n   * @param {number} deltaPacketsReceived\n   * @param {number} [fractionLost] - 0–1 (undefined in Firefox)\n   * @param {number} [jitter] - s (undefined for video tracks in Chrome)\n   */\n  constructor(id, trackId, bitrate, deltaPacketsLost, deltaPacketsReceived, fractionLost, jitter) {\n    super(id, trackId, bitrate);\n    const phonyFractionLost = deltaPacketsReceived > 0\n      ? deltaPacketsLost / deltaPacketsReceived\n      : 0;\n    Object.defineProperties(this, {\n      deltaPacketsLost: {\n        enumerable: true,\n        value: deltaPacketsLost\n      },\n      deltaPacketsReceived: {\n        enumerable: true,\n        value: deltaPacketsReceived\n      },\n      fractionLost: {\n        enumerable: true,\n        value: fractionLost\n      },\n      jitter: {\n        enumerable: true,\n        value: jitter\n      },\n      phonyFractionLost: {\n        enumerable: true,\n        value: phonyFractionLost\n      }\n    });\n  }\n\n  /**\n   * Create a {@link ReceiverReport}.\n   * @param {string} trackId\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @returns {ReceiverReport}\n   */\n  static of(trackId, olderStats, newerStats) {\n    if (olderStats.id !== newerStats.id) {\n      throw new Error('RTCStats IDs must match');\n    }\n    const secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n    const deltaBytesReceived = newerStats.bytesReceived - olderStats.bytesReceived;\n    const bitrate = secondsElapsed > 0\n      ? (deltaBytesReceived / secondsElapsed) * 8\n      : 0;\n    const deltaPacketsLost = Math.max(newerStats.packetsLost - olderStats.packetsLost, 0);\n    const deltaPacketsReceived = newerStats.packetsReceived - olderStats.packetsReceived;\n    const { fractionLost, jitter } = newerStats;\n    return new ReceiverReport(olderStats.id, trackId, bitrate, deltaPacketsLost, deltaPacketsReceived, fractionLost, jitter);\n  }\n\n  /**\n   * Summarize {@link ReceiverReport}s by summing and averaging their values.\n   * @param {Array<ReceiverReport>} reports\n   * @returns {ReceiverSummary}\n   */\n  static summarize(reports) {\n    const summaries = reports.map(report => report.summarize());\n    const bitrate = sum(summaries.map(summary => summary.bitrate));\n    const fractionLost = average(summaries.map(summary => summary.fractionLost));\n    const jitter = average(summaries.map(summary => summary.jitter));\n    return {\n      bitrate,\n      fractionLost,\n      jitter\n    };\n  }\n\n  /**\n   * Summarize the {@link ReceiveReport}.\n   * @returns {ReceiverSummary}\n   */\n  summarize() {\n    return {\n      bitrate: this.bitrate,\n      fractionLost: typeof this.fractionLost === 'number' ? this.fractionLost : this.phonyFractionLost,\n      jitter: this.jitter\n    };\n  }\n}\n\nmodule.exports = ReceiverReport;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}