{"ast":null,"code":"'use strict';\n\n/**\n * Monitor the network connection status to detect interruptions and handoffs.\n */\nvar NetworkMonitor = /** @class */function () {\n  /**\n   * Construct a {@link NetworkMonitor}.\n   * @param {function} onNetworkChanged\n   * @param {*} [options]\n   */\n  function NetworkMonitor(onNetworkChanged, options) {\n    var _this = this;\n    options = Object.assign({\n      navigator: navigator,\n      window: window\n    }, options);\n    var nav = options.navigator;\n    var connection = nav.connection || {\n      type: null\n    };\n    var type = connection.type;\n    var _a = connection.type ? {\n        _events: {\n          value: ['change', 'typechange']\n        },\n        _listener: {\n          value: function () {\n            var networkChanged = type !== _this.type && _this.isOnline;\n            type = _this.type;\n            if (networkChanged) {\n              onNetworkChanged();\n            }\n          }\n        },\n        _target: {\n          value: connection\n        }\n      } : {\n        _events: {\n          value: ['online']\n        },\n        _listener: {\n          value: onNetworkChanged\n        },\n        _target: {\n          value: options.window\n        }\n      },\n      _events = _a._events,\n      _listener = _a._listener,\n      _target = _a._target;\n    Object.defineProperties(this, {\n      isOnline: {\n        enumerable: true,\n        get: function () {\n          return typeof nav.onLine === 'boolean' ? nav.onLine : true;\n        }\n      },\n      type: {\n        enumerable: true,\n        get: function () {\n          return connection.type || null;\n        }\n      },\n      _listener: _listener,\n      _events: _events,\n      _target: _target\n    });\n  }\n  /**\n   * Start the {@link NetworkMonitor}.\n   */\n  NetworkMonitor.prototype.start = function () {\n    var _this = this;\n    this._events.forEach(function (event) {\n      _this._target.addEventListener(event, _this._listener);\n    });\n  };\n  /**\n   * Stop the {@link NetworkMonitor}.\n   */\n  NetworkMonitor.prototype.stop = function () {\n    var _this = this;\n    this._events.forEach(function (event) {\n      _this._target.removeEventListener(event, _this._listener);\n    });\n  };\n  return NetworkMonitor;\n}();\nmodule.exports = NetworkMonitor;","map":{"version":3,"names":["NetworkMonitor","onNetworkChanged","options","_this","Object","assign","navigator","window","nav","connection","type","_a","_events","value","_listener","networkChanged","isOnline","_target","defineProperties","enumerable","get","onLine","prototype","start","forEach","event","addEventListener","stop","removeEventListener","module","exports"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/node_modules/twilio-video/lib/util/networkmonitor.js"],"sourcesContent":["'use strict';\n\n/**\n * Monitor the network connection status to detect interruptions and handoffs.\n */\nclass NetworkMonitor {\n  /**\n   * Construct a {@link NetworkMonitor}.\n   * @param {function} onNetworkChanged\n   * @param {*} [options]\n   */\n  constructor(onNetworkChanged, options) {\n    options = Object.assign({\n      navigator,\n      window,\n    }, options);\n\n    const nav = options.navigator;\n    const connection = nav.connection || { type: null };\n    let type = connection.type;\n\n    const { _events, _listener, _target } = connection.type ? {\n      _events: {\n        value: ['change', 'typechange']\n      },\n      _listener: {\n        value: () => {\n          const networkChanged = type !== this.type && this.isOnline;\n          type = this.type;\n          if (networkChanged) {\n            onNetworkChanged();\n          }\n        }\n      },\n      _target: {\n        value: connection\n      }\n    } : {\n      _events: {\n        value: ['online']\n      },\n      _listener: {\n        value: onNetworkChanged\n      },\n      _target: {\n        value: options.window\n      }\n    };\n\n    Object.defineProperties(this, {\n      isOnline: {\n        enumerable: true,\n        get() {\n          return typeof nav.onLine === 'boolean'\n            ? nav.onLine\n            : true;\n        }\n      },\n      type: {\n        enumerable: true,\n        get() {\n          return connection.type || null;\n        }\n      },\n      _listener,\n      _events,\n      _target\n    });\n  }\n\n  /**\n   * Start the {@link NetworkMonitor}.\n   */\n  start() {\n    this._events.forEach(event => {\n      this._target.addEventListener(event, this._listener);\n    });\n  }\n\n  /**\n   * Stop the {@link NetworkMonitor}.\n   */\n  stop() {\n    this._events.forEach(event => {\n      this._target.removeEventListener(event, this._listener);\n    });\n  }\n}\n\nmodule.exports = NetworkMonitor;\n"],"mappings":"AAAA,YAAY;;AAEZ;;;AAGA,IAAAA,cAAA;EACE;;;;;EAKA,SAAAA,eAAYC,gBAAgB,EAAEC,OAAO;IAArC,IAAAC,KAAA;IACED,OAAO,GAAGE,MAAM,CAACC,MAAM,CAAC;MACtBC,SAAS,EAAAA,SAAA;MACTC,MAAM,EAAAA;KACP,EAAEL,OAAO,CAAC;IAEX,IAAMM,GAAG,GAAGN,OAAO,CAACI,SAAS;IAC7B,IAAMG,UAAU,GAAGD,GAAG,CAACC,UAAU,IAAI;MAAEC,IAAI,EAAE;IAAI,CAAE;IACnD,IAAIA,IAAI,GAAGD,UAAU,CAACC,IAAI;IAEpB,IAAAC,EAAA,GAAkCF,UAAU,CAACC,IAAI,GAAG;QACxDE,OAAO,EAAE;UACPC,KAAK,EAAE,CAAC,QAAQ,EAAE,YAAY;SAC/B;QACDC,SAAS,EAAE;UACTD,KAAK,EAAE,SAAAA,CAAA;YACL,IAAME,cAAc,GAAGL,IAAI,KAAKP,KAAI,CAACO,IAAI,IAAIP,KAAI,CAACa,QAAQ;YAC1DN,IAAI,GAAGP,KAAI,CAACO,IAAI;YAChB,IAAIK,cAAc,EAAE;cAClBd,gBAAgB,EAAE;;UAEtB;SACD;QACDgB,OAAO,EAAE;UACPJ,KAAK,EAAEJ;;OAEV,GAAG;QACFG,OAAO,EAAE;UACPC,KAAK,EAAE,CAAC,QAAQ;SACjB;QACDC,SAAS,EAAE;UACTD,KAAK,EAAEZ;SACR;QACDgB,OAAO,EAAE;UACPJ,KAAK,EAAEX,OAAO,CAACK;;OAElB;MA1BOK,OAAO,GAAAD,EAAA,CAAAC,OAAA;MAAEE,SAAS,GAAAH,EAAA,CAAAG,SAAA;MAAEG,OAAO,GAAAN,EAAA,CAAAM,OA0BlC;IAEDb,MAAM,CAACc,gBAAgB,CAAC,IAAI,EAAE;MAC5BF,QAAQ,EAAE;QACRG,UAAU,EAAE,IAAI;QAChBC,GAAG,WAAAA,CAAA;UACD,OAAO,OAAOZ,GAAG,CAACa,MAAM,KAAK,SAAS,GAClCb,GAAG,CAACa,MAAM,GACV,IAAI;QACV;OACD;MACDX,IAAI,EAAE;QACJS,UAAU,EAAE,IAAI;QAChBC,GAAG,WAAAA,CAAA;UACD,OAAOX,UAAU,CAACC,IAAI,IAAI,IAAI;QAChC;OACD;MACDI,SAAS,EAAAA,SAAA;MACTF,OAAO,EAAAA,OAAA;MACPK,OAAO,EAAAA;KACR,CAAC;EACJ;EAEA;;;EAGAjB,cAAA,CAAAsB,SAAA,CAAAC,KAAK,GAAL;IAAA,IAAApB,KAAA;IACE,IAAI,CAACS,OAAO,CAACY,OAAO,CAAC,UAAAC,KAAK;MACxBtB,KAAI,CAACc,OAAO,CAACS,gBAAgB,CAACD,KAAK,EAAEtB,KAAI,CAACW,SAAS,CAAC;IACtD,CAAC,CAAC;EACJ,CAAC;EAED;;;EAGAd,cAAA,CAAAsB,SAAA,CAAAK,IAAI,GAAJ;IAAA,IAAAxB,KAAA;IACE,IAAI,CAACS,OAAO,CAACY,OAAO,CAAC,UAAAC,KAAK;MACxBtB,KAAI,CAACc,OAAO,CAACW,mBAAmB,CAACH,KAAK,EAAEtB,KAAI,CAACW,SAAS,CAAC;IACzD,CAAC,CAAC;EACJ,CAAC;EACH,OAAAd,cAAC;AAAD,CAAC,CAlFD;AAoFA6B,MAAM,CAACC,OAAO,GAAG9B,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}