{"ast":null,"code":"var _jsxFileName = \"/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/src/components/TwilioVideo.jsx\",\n  _s = $RefreshSig$();\nimport Video from 'twilio-video';\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TwilioVideo = () => {\n  _s();\n  const [roomName, setRoomName] = useState('');\n  const [token, setToken] = useState('');\n  const [videoRoom, setVideoRoom] = useState(null);\n  useEffect(() => {\n    // Функция для получения токена и имени комнаты от сервера\n    const fetchTokenAndRoomName = async () => {\n      try {\n        const response = await fetch('your-backend-url-to-get-token-and-room');\n        const data = await response.json();\n        setToken(data.token);\n        setRoomName(data.roomName);\n      } catch (error) {\n        console.error('Error fetching token and room name:', error);\n      }\n    };\n    fetchTokenAndRoomName();\n  }, []);\n  const joinVideoRoom = async () => {\n    try {\n      const videoRoom = await Video.connect(token, {\n        name: roomName\n      });\n      setVideoRoom(videoRoom);\n    } catch (error) {\n      console.error('Error connecting to video room:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Twilio Video Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinVideoRoom,\n      children: \"Join Video Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), videoRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [videoRoom.localParticipant.videoTracks.map(track => /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: ref => track.attach(ref)\n      }, track.sid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)), videoRoom.participants.map(participant => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: participant.videoTracks.map(track => /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: ref => track.attach(ref)\n        }, track.sid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this))\n      }, participant.sid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(TwilioVideo, \"KaWGhI5d3CjR3Lar7IJrRRnJ/0Q=\");\n_c = TwilioVideo;\nexport default TwilioVideo;\nvar _c;\n$RefreshReg$(_c, \"TwilioVideo\");","map":{"version":3,"names":["Video","React","useState","jsxDEV","_jsxDEV","TwilioVideo","_s","roomName","setRoomName","token","setToken","videoRoom","setVideoRoom","useEffect","fetchTokenAndRoomName","response","fetch","data","json","error","console","joinVideoRoom","connect","name","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","localParticipant","videoTracks","map","track","ref","attach","sid","participants","participant","_c","$RefreshReg$"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/src/components/TwilioVideo.jsx"],"sourcesContent":["import Video from 'twilio-video';\nimport React from \"react\";\nimport {useState} from \"react\";\n\nconst TwilioVideo = () => {\n    const [roomName, setRoomName] = useState('');\n    const [token, setToken] = useState('');\n    const [videoRoom, setVideoRoom] = useState(null);\n\n    useEffect(() => {\n        // Функция для получения токена и имени комнаты от сервера\n        const fetchTokenAndRoomName = async () => {\n            try {\n                const response = await fetch('your-backend-url-to-get-token-and-room');\n                const data = await response.json();\n                setToken(data.token);\n                setRoomName(data.roomName);\n            } catch (error) {\n                console.error('Error fetching token and room name:', error);\n            }\n        };\n\n        fetchTokenAndRoomName();\n    }, []);\n\n    const joinVideoRoom = async () => {\n        try {\n            const videoRoom = await Video.connect(token, {\n                name: roomName\n            });\n            setVideoRoom(videoRoom);\n        } catch (error) {\n            console.error('Error connecting to video room:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Twilio Video Component</h1>\n            <button onClick={joinVideoRoom}>Join Video Room</button>\n            {/* Видео-компоненты для отображения видео-потока */}\n            {videoRoom && (\n                <div>\n                    {videoRoom.localParticipant.videoTracks.map(track => (\n                        <video key={track.sid} ref={ref => track.attach(ref)} />\n                    ))}\n                    {videoRoom.participants.map(participant => (\n                        <div key={participant.sid}>\n                            {participant.videoTracks.map(track => (\n                                <video key={track.sid} ref={ref => track.attach(ref)} />\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TwilioVideo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}