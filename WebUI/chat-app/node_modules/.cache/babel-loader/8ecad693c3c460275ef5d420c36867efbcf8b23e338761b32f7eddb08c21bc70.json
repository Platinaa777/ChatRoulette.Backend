{"ast":null,"code":"/* eslint callback-return:0 */\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar MediaSignaling = require('./mediasignaling');\nvar Timeout = require('../../util/timeout');\nvar isDeepEqual = require('../../util').isDeepEqual;\nvar RENDER_HINT_RESPONSE_TIME_MS = 2000; // time to wait for server response (before resending all hints.)\nvar messageId = 1;\nvar RenderHintsSignaling = /** @class */function (_super) {\n  __extends(RenderHintsSignaling, _super);\n  /**\n   * Construct a {@link RenderHintsSignaling}.\n   */\n  function RenderHintsSignaling(getReceiver, options) {\n    var _this = _super.call(this, getReceiver, 'render_hints', options) || this;\n    Object.defineProperties(_this, {\n      _trackSidsToRenderHints: {\n        value: new Map()\n      },\n      _responseTimer: {\n        value: new Timeout(function () {\n          _this._sendAllHints();\n          // once timer fires, for next round double the delay.\n          _this._responseTimer.setDelay(_this._responseTimer.delay * 2);\n        }, RENDER_HINT_RESPONSE_TIME_MS, false)\n      }\n    });\n    _this.on('ready', function (transport) {\n      transport.on('message', function (message) {\n        _this._log.debug('Incoming: ', message);\n        switch (message.type) {\n          case 'render_hints':\n            _this._processHintResults(message && message.subscriber && message.subscriber.hints || []);\n            break;\n          default:\n            _this._log.warn('Unknown message type: ', message.type);\n            break;\n        }\n      });\n      // NOTE(mpatwardhan): When transport is set (either 1st time of after vms failover)\n      // resend all track states.\n      _this._sendAllHints();\n    });\n    return _this;\n  }\n  RenderHintsSignaling.prototype._sendAllHints = function () {\n    var _this = this;\n    // to force sending all hints simply mark all tracks as dirty.\n    Array.from(this._trackSidsToRenderHints.keys()).forEach(function (trackSid) {\n      var trackState = _this._trackSidsToRenderHints.get(trackSid);\n      if (trackState.renderDimensions) {\n        trackState.isDimensionDirty = true;\n      }\n      if ('enabled' in trackState) {\n        trackState.isEnabledDirty = true;\n      }\n    });\n    this._sendHints();\n  };\n  RenderHintsSignaling.prototype._processHintResults = function (hintResults) {\n    var _this = this;\n    this._responseTimer.clear();\n    this._responseTimer.setDelay(RENDER_HINT_RESPONSE_TIME_MS);\n    hintResults.forEach(function (hintResult) {\n      if (hintResult.result !== 'OK') {\n        _this._log.debug('Server error processing hint:', hintResult);\n      }\n    });\n    this._sendHints();\n  };\n  RenderHintsSignaling.prototype._sendHints = function () {\n    var _this = this;\n    if (!this._transport || this._responseTimer.isSet) {\n      return;\n    }\n    var hints = [];\n    Array.from(this._trackSidsToRenderHints.keys()).forEach(function (trackSid) {\n      var trackState = _this._trackSidsToRenderHints.get(trackSid);\n      if (trackState.isEnabledDirty || trackState.isDimensionDirty) {\n        var mspHint = {\n          'track': trackSid\n        };\n        if (trackState.isEnabledDirty) {\n          mspHint.enabled = trackState.enabled;\n          trackState.isEnabledDirty = false;\n        }\n        if (trackState.isDimensionDirty) {\n          // eslint-disable-next-line camelcase\n          mspHint.render_dimensions = trackState.renderDimensions;\n          trackState.isDimensionDirty = false;\n        }\n        hints.push(mspHint);\n      }\n    });\n    if (hints.length > 0) {\n      var payLoad = {\n        type: 'render_hints',\n        subscriber: {\n          id: messageId++,\n          hints: hints\n        }\n      };\n      this._log.debug('Outgoing: ', payLoad);\n      this._transport.publish(payLoad);\n      this._responseTimer.start();\n    }\n  };\n  /**\n   * @param {Track.SID} trackSid\n   * @param {ClientRenderHint} renderHint\n   */\n  RenderHintsSignaling.prototype.setTrackHint = function (trackSid, renderHint) {\n    var trackState = this._trackSidsToRenderHints.get(trackSid) || {\n      isEnabledDirty: false,\n      isDimensionDirty: false\n    };\n    if ('enabled' in renderHint && trackState.enabled !== renderHint.enabled) {\n      trackState.enabled = !!renderHint.enabled;\n      trackState.isEnabledDirty = true;\n    }\n    if (renderHint.renderDimensions && !isDeepEqual(renderHint.renderDimensions, trackState.renderDimensions)) {\n      // eslint-disable-next-line camelcase\n      trackState.renderDimensions = renderHint.renderDimensions;\n      trackState.isDimensionDirty = true;\n    }\n    this._trackSidsToRenderHints.set(trackSid, trackState);\n    this._sendHints();\n  };\n  /**\n   * must be called when track is unsubscribed.\n   * @param {Track.SID} trackSid\n   */\n  RenderHintsSignaling.prototype.clearTrackHint = function (trackSid) {\n    this._trackSidsToRenderHints.delete(trackSid);\n  };\n  return RenderHintsSignaling;\n}(MediaSignaling);\nmodule.exports = RenderHintsSignaling;","map":{"version":3,"names":["MediaSignaling","require","Timeout","isDeepEqual","RENDER_HINT_RESPONSE_TIME_MS","messageId","RenderHintsSignaling","_super","__extends","getReceiver","options","_this","call","Object","defineProperties","_trackSidsToRenderHints","value","Map","_responseTimer","_sendAllHints","setDelay","delay","on","transport","message","_log","debug","type","_processHintResults","subscriber","hints","warn","prototype","Array","from","keys","forEach","trackSid","trackState","get","renderDimensions","isDimensionDirty","isEnabledDirty","_sendHints","hintResults","clear","hintResult","result","_transport","isSet","mspHint","enabled","render_dimensions","push","length","payLoad","id","publish","start","setTrackHint","renderHint","set","clearTrackHint","delete","module","exports"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/node_modules/twilio-video/lib/signaling/v2/renderhintssignaling.js"],"sourcesContent":["/* eslint callback-return:0 */\n'use strict';\n\nconst MediaSignaling = require('./mediasignaling');\nconst Timeout = require('../../util/timeout');\nconst { isDeepEqual } = require('../../util');\nconst RENDER_HINT_RESPONSE_TIME_MS = 2000; // time to wait for server response (before resending all hints.)\n\nlet messageId = 1;\nclass RenderHintsSignaling extends MediaSignaling {\n  /**\n   * Construct a {@link RenderHintsSignaling}.\n   */\n  constructor(getReceiver, options) {\n    super(getReceiver, 'render_hints', options);\n    Object.defineProperties(this, {\n      _trackSidsToRenderHints: {\n        value: new Map()\n      },\n      _responseTimer: {\n        value: new Timeout(() => {\n          this._sendAllHints();\n          // once timer fires, for next round double the delay.\n          this._responseTimer.setDelay(this._responseTimer.delay * 2);\n        }, RENDER_HINT_RESPONSE_TIME_MS, false),\n      }\n    });\n\n    this.on('ready', transport => {\n      transport.on('message', message => {\n        this._log.debug('Incoming: ', message);\n        switch (message.type) {\n          case 'render_hints':\n            this._processHintResults((message && message.subscriber && message.subscriber.hints) || []);\n            break;\n          default:\n            this._log.warn('Unknown message type: ', message.type);\n            break;\n        }\n      });\n\n      // NOTE(mpatwardhan): When transport is set (either 1st time of after vms failover)\n      // resend all track states.\n      this._sendAllHints();\n    });\n  }\n\n  _sendAllHints() {\n    // to force sending all hints simply mark all tracks as dirty.\n    Array.from(this._trackSidsToRenderHints.keys()).forEach(trackSid => {\n      const trackState = this._trackSidsToRenderHints.get(trackSid);\n      if (trackState.renderDimensions) {\n        trackState.isDimensionDirty = true;\n      }\n\n      if ('enabled' in trackState) {\n        trackState.isEnabledDirty = true;\n      }\n    });\n    this._sendHints();\n  }\n\n  _processHintResults(hintResults) {\n    this._responseTimer.clear();\n    this._responseTimer.setDelay(RENDER_HINT_RESPONSE_TIME_MS);\n    hintResults.forEach(hintResult => {\n      if (hintResult.result !== 'OK') {\n        this._log.debug('Server error processing hint:', hintResult);\n      }\n    });\n    this._sendHints();\n  }\n\n  _sendHints() {\n    if (!this._transport || this._responseTimer.isSet) {\n      return;\n    }\n\n    const hints = [];\n    Array.from(this._trackSidsToRenderHints.keys()).forEach(trackSid => {\n      const trackState = this._trackSidsToRenderHints.get(trackSid);\n      if (trackState.isEnabledDirty || trackState.isDimensionDirty) {\n        const mspHint = {\n          'track': trackSid,\n        };\n        if (trackState.isEnabledDirty) {\n          mspHint.enabled = trackState.enabled;\n          trackState.isEnabledDirty = false;\n        }\n        if (trackState.isDimensionDirty) {\n          // eslint-disable-next-line camelcase\n          mspHint.render_dimensions = trackState.renderDimensions;\n          trackState.isDimensionDirty = false;\n        }\n        hints.push(mspHint);\n      }\n    });\n\n    if (hints.length > 0) {\n      const payLoad = {\n        type: 'render_hints',\n        subscriber: {\n          id: messageId++,\n          hints\n        }\n      };\n      this._log.debug('Outgoing: ', payLoad);\n      this._transport.publish(payLoad);\n      this._responseTimer.start();\n    }\n  }\n\n  /**\n   * @param {Track.SID} trackSid\n   * @param {ClientRenderHint} renderHint\n   */\n  setTrackHint(trackSid, renderHint) {\n    const trackState = this._trackSidsToRenderHints.get(trackSid) || { isEnabledDirty: false, isDimensionDirty: false };\n    if ('enabled' in renderHint && trackState.enabled !== renderHint.enabled) {\n      trackState.enabled = !!renderHint.enabled;\n      trackState.isEnabledDirty = true;\n    }\n\n    if (renderHint.renderDimensions && !isDeepEqual(renderHint.renderDimensions, trackState.renderDimensions)) {\n      // eslint-disable-next-line camelcase\n      trackState.renderDimensions = renderHint.renderDimensions;\n      trackState.isDimensionDirty = true;\n    }\n    this._trackSidsToRenderHints.set(trackSid, trackState);\n    this._sendHints();\n  }\n\n  /**\n   * must be called when track is unsubscribed.\n   * @param {Track.SID} trackSid\n   */\n  clearTrackHint(trackSid) {\n    this._trackSidsToRenderHints.delete(trackSid);\n  }\n}\n\n\nmodule.exports = RenderHintsSignaling;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}