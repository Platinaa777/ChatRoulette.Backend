{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nvar Track = require('./');\nvar _a = require('../../util/constants'),\n  E = _a.typeErrors,\n  trackPriority = _a.trackPriority;\n/**\n * A {@link RemoteDataTrack} represents data published to a {@link Room} by a\n * {@link RemoteParticipant}.\n * @extends Track\n * @property {boolean} isEnabled - true\n * @property {boolean} isSubscribed - Whether the {@link RemoteDataTrack} is\n *   subscribed to\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteDataTrack} is\n *   switched off\n * @property {Track.Kind} kind - \"data\"\n * @property {?number} maxPacketLifeTime - If non-null, this represents a time\n *   limit (in milliseconds) during which data will be transmitted or\n *   retransmitted if not acknowledged on the underlying RTCDataChannel.\n * @property {?number} maxRetransmits - If non-null, this represents the number\n *   of times the data will be retransmitted if not successfully received on the\n *   underlying RTCDataChannel.\n * @property {boolean} ordered - true if data on the {@link RemoteDataTrack} can\n *   be received out-of-order.\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteDataTrack}\n * @property {boolean} reliable - This is true if both\n *   <code>maxPacketLifeTime</code> and <code>maxRetransmits</code> are set to\n *   null. In other words, if this is true, there is no bound on packet lifetime\n *   or the number of retransmits that will be attempted, ensuring \"reliable\"\n *   transmission.\n * @property {Track.SID} sid - The SID assigned to the {@link RemoteDataTrack}\n * @emits RemoteDataTrack#message\n * @emits RemoteDataTrack#switchedOff\n * @emits RemoteDataTrack#switchedOn\n */\nvar RemoteDataTrack = /** @class */function (_super) {\n  __extends(RemoteDataTrack, _super);\n  /**\n   * Construct a {@link RemoteDataTrack} from a {@link DataTrackReceiver}.\n   * @param {Track.SID} sid\n   * @param {DataTrackReceiver} dataTrackReceiver\n   * @param {{log: Log, name: ?string}} options\n   */\n  function RemoteDataTrack(sid, dataTrackReceiver, options) {\n    var _this = _super.call(this, dataTrackReceiver.id, 'data', options) || this;\n    Object.defineProperties(_this, {\n      _isSwitchedOff: {\n        value: false,\n        writable: true\n      },\n      _priority: {\n        value: null,\n        writable: true\n      },\n      isEnabled: {\n        enumerable: true,\n        value: true\n      },\n      isSwitchedOff: {\n        enumerable: true,\n        get: function () {\n          return this._isSwitchedOff;\n        }\n      },\n      maxPacketLifeTime: {\n        enumerable: true,\n        value: dataTrackReceiver.maxPacketLifeTime\n      },\n      maxRetransmits: {\n        enumerable: true,\n        value: dataTrackReceiver.maxRetransmits\n      },\n      ordered: {\n        enumerable: true,\n        value: dataTrackReceiver.ordered\n      },\n      priority: {\n        enumerable: true,\n        get: function () {\n          return this._priority;\n        }\n      },\n      reliable: {\n        enumerable: true,\n        value: dataTrackReceiver.maxPacketLifeTime === null && dataTrackReceiver.maxRetransmits === null\n      },\n      sid: {\n        enumerable: true,\n        value: sid\n      }\n    });\n    dataTrackReceiver.on('message', function (data) {\n      _this.emit('message', data, _this);\n    });\n    return _this;\n  }\n  /**\n   * Update the subscriber {@link Track.Priority} of the {@link RemoteDataTrack}.\n   * @param {?Track.Priority} priority - the new {@link Track.priority};\n   *   Currently setPriority has no effect on data tracks.\n   * @returns {this}\n   * @throws {RangeError}\n   */\n  RemoteDataTrack.prototype.setPriority = function (priority) {\n    var priorityValues = __spreadArray([null], __read(Object.values(trackPriority)));\n    if (!priorityValues.includes(priority)) {\n      // eslint-disable-next-line new-cap\n      throw E.INVALID_VALUE('priority', priorityValues);\n    }\n    // Note: priority has no real effect on the data tracks.\n    this._priority = priority;\n    return this;\n  };\n  /**\n   * @private\n   */\n  RemoteDataTrack.prototype._setEnabled = function () {\n    // Do nothing.\n  };\n  /**\n   * @private\n   * @param {boolean} isSwitchedOff\n   */\n  RemoteDataTrack.prototype._setSwitchedOff = function (isSwitchedOff) {\n    if (this._isSwitchedOff !== isSwitchedOff) {\n      this._isSwitchedOff = isSwitchedOff;\n      this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n    }\n  };\n  return RemoteDataTrack;\n}(Track);\n/**\n * A message was received over the {@link RemoteDataTrack}.\n * @event RemoteDataTrack#message\n * @param {string|ArrayBuffer} data\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that received\n *   the message\n */\n/**\n * A {@link RemoteDataTrack} was switched off.\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that was\n *   switched off\n * @event RemoteDataTrack#switchedOff\n */\n/**\n * A {@link RemoteDataTrack} was switched on.\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that was\n *   switched on\n * @event RemoteDataTrack#switchedOn\n */\nmodule.exports = RemoteDataTrack;","map":{"version":3,"names":["Track","require","_a","E","typeErrors","trackPriority","RemoteDataTrack","_super","__extends","sid","dataTrackReceiver","options","_this","call","id","Object","defineProperties","_isSwitchedOff","value","writable","_priority","isEnabled","enumerable","isSwitchedOff","get","maxPacketLifeTime","maxRetransmits","ordered","priority","reliable","on","data","emit","prototype","setPriority","priorityValues","__spreadArray","__read","values","includes","INVALID_VALUE","_setEnabled","_setSwitchedOff","module","exports"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/node_modules/twilio-video/lib/media/track/remotedatatrack.js"],"sourcesContent":["'use strict';\n\nconst Track = require('./');\nconst { typeErrors: E, trackPriority } = require('../../util/constants');\n\n/**\n * A {@link RemoteDataTrack} represents data published to a {@link Room} by a\n * {@link RemoteParticipant}.\n * @extends Track\n * @property {boolean} isEnabled - true\n * @property {boolean} isSubscribed - Whether the {@link RemoteDataTrack} is\n *   subscribed to\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteDataTrack} is\n *   switched off\n * @property {Track.Kind} kind - \"data\"\n * @property {?number} maxPacketLifeTime - If non-null, this represents a time\n *   limit (in milliseconds) during which data will be transmitted or\n *   retransmitted if not acknowledged on the underlying RTCDataChannel.\n * @property {?number} maxRetransmits - If non-null, this represents the number\n *   of times the data will be retransmitted if not successfully received on the\n *   underlying RTCDataChannel.\n * @property {boolean} ordered - true if data on the {@link RemoteDataTrack} can\n *   be received out-of-order.\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteDataTrack}\n * @property {boolean} reliable - This is true if both\n *   <code>maxPacketLifeTime</code> and <code>maxRetransmits</code> are set to\n *   null. In other words, if this is true, there is no bound on packet lifetime\n *   or the number of retransmits that will be attempted, ensuring \"reliable\"\n *   transmission.\n * @property {Track.SID} sid - The SID assigned to the {@link RemoteDataTrack}\n * @emits RemoteDataTrack#message\n * @emits RemoteDataTrack#switchedOff\n * @emits RemoteDataTrack#switchedOn\n */\nclass RemoteDataTrack extends Track {\n  /**\n   * Construct a {@link RemoteDataTrack} from a {@link DataTrackReceiver}.\n   * @param {Track.SID} sid\n   * @param {DataTrackReceiver} dataTrackReceiver\n   * @param {{log: Log, name: ?string}} options\n   */\n  constructor(sid, dataTrackReceiver, options) {\n    super(dataTrackReceiver.id, 'data', options);\n\n    Object.defineProperties(this, {\n      _isSwitchedOff: {\n        value: false,\n        writable: true\n      },\n      _priority: {\n        value: null,\n        writable: true\n      },\n      isEnabled: {\n        enumerable: true,\n        value: true\n      },\n      isSwitchedOff: {\n        enumerable: true,\n        get() {\n          return this._isSwitchedOff;\n        }\n      },\n      maxPacketLifeTime: {\n        enumerable: true,\n        value: dataTrackReceiver.maxPacketLifeTime\n      },\n      maxRetransmits: {\n        enumerable: true,\n        value: dataTrackReceiver.maxRetransmits\n      },\n      ordered: {\n        enumerable: true,\n        value: dataTrackReceiver.ordered\n      },\n      priority: {\n        enumerable: true,\n        get() {\n          return this._priority;\n        }\n      },\n      reliable: {\n        enumerable: true,\n        value: dataTrackReceiver.maxPacketLifeTime === null\n          && dataTrackReceiver.maxRetransmits === null\n      },\n      sid: {\n        enumerable: true,\n        value: sid\n      }\n    });\n\n    dataTrackReceiver.on('message', data => {\n      this.emit('message', data, this);\n    });\n  }\n\n  /**\n   * Update the subscriber {@link Track.Priority} of the {@link RemoteDataTrack}.\n   * @param {?Track.Priority} priority - the new {@link Track.priority};\n   *   Currently setPriority has no effect on data tracks.\n   * @returns {this}\n   * @throws {RangeError}\n   */\n  setPriority(priority) {\n    const priorityValues = [null, ...Object.values(trackPriority)];\n    if (!priorityValues.includes(priority)) {\n      // eslint-disable-next-line new-cap\n      throw E.INVALID_VALUE('priority', priorityValues);\n    }\n\n    // Note: priority has no real effect on the data tracks.\n    this._priority = priority;\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _setEnabled() {\n    // Do nothing.\n  }\n\n  /**\n   * @private\n   * @param {boolean} isSwitchedOff\n   */\n  _setSwitchedOff(isSwitchedOff) {\n    if (this._isSwitchedOff !== isSwitchedOff) {\n      this._isSwitchedOff = isSwitchedOff;\n      this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n    }\n  }\n}\n\n/**\n * A message was received over the {@link RemoteDataTrack}.\n * @event RemoteDataTrack#message\n * @param {string|ArrayBuffer} data\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that received\n *   the message\n */\n\n/**\n * A {@link RemoteDataTrack} was switched off.\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that was\n *   switched off\n * @event RemoteDataTrack#switchedOff\n */\n\n/**\n * A {@link RemoteDataTrack} was switched on.\n * @param {RemoteDataTrack} track - The {@link RemoteDataTrack} that was\n *   switched on\n * @event RemoteDataTrack#switchedOn\n */\n\nmodule.exports = RemoteDataTrack;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}