{"ast":null,"code":"var _jsxFileName = \"/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/src/components/TwilioVideo.jsx\";\nimport Video from 'twilio-video';\nimport axios from 'axios';\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TwilioVideo = () => {\n  // const [token, setToken] = useState('');\n  //\n  // useEffect(() => {\n  //     const fetchToken = async () => {\n  //         try {\n  //             const response = await axios.get('http://localhost:8003/Chat/get-access-token');\n  //             setToken(response.data);\n  //             console.log(token);\n  //         } catch (error) {\n  //             console.error('Error fetching token:', error);\n  //         }\n  //     };\n  //\n  //     fetchToken();\n  //    \n  //     // const x = joinVideoRoom(\"room-1\", token);\n  // }, []);\n  //\n  // const joinVideoRoom = async (roomName, token) => {\n  //     const room = await Video.connect(token, {\n  //         room: roomName,\n  //     });\n  //     return room;\n  // };\n\n  const {\n    connect\n  } = require('twilio-video');\n  connect('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImN0eSI6InR3aWxpby1mcGE7dj0xIn0.eyJpc3MiOiJTS2EwNGExZDliYjFkMGRjMmMzZWUxZDk3YjNiZjc5MDcyIiwiZXhwIjoxNzAwMzk0NTQ1LCJqdGkiOiJTS2EwNGExZDliYjFkMGRjMmMzZWUxZDk3YjNiZjc5MDcyLTE3MDAzOTA5NDUiLCJzdWIiOiJBQzRhMDlmYzBhZjk5NWYzMTE0MjJiMmM4OWY0MjI2OTZlIiwiZ3JhbnRzIjp7ImlkZW50aXR5IjoidXNlciIsInZpZGVvIjp7InJvb20iOiJyb29tLTEifX19.Fx9yalcNvpzchek0hFxix5DNejpF-Ru9ORwLpMgqubA', {\n    name: 'RM318e2dd0552262c29c84ea1d29a7654f'\n  }).then(room => {\n    console.log(`Successfully joined a Room: ${room}`);\n    room.on('participantConnected', participant => {\n      console.log(`A remote Participant connected: ${participant}`);\n    });\n  }, error => {\n    console.error(`Unable to connect to Room: ${error.message}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Twilio Video Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_c = TwilioVideo;\nexport default TwilioVideo;\nvar _c;\n$RefreshReg$(_c, \"TwilioVideo\");","map":{"version":3,"names":["Video","axios","React","useState","useEffect","jsxDEV","_jsxDEV","TwilioVideo","connect","require","name","then","room","console","log","on","participant","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/src/components/TwilioVideo.jsx"],"sourcesContent":["import Video from 'twilio-video';\nimport axios from 'axios';\nimport React from \"react\";\nimport {useState, useEffect} from \"react\";\n\nconst TwilioVideo = () => {\n    // const [token, setToken] = useState('');\n    //\n    // useEffect(() => {\n    //     const fetchToken = async () => {\n    //         try {\n    //             const response = await axios.get('http://localhost:8003/Chat/get-access-token');\n    //             setToken(response.data);\n    //             console.log(token);\n    //         } catch (error) {\n    //             console.error('Error fetching token:', error);\n    //         }\n    //     };\n    //\n    //     fetchToken();\n    //    \n    //     // const x = joinVideoRoom(\"room-1\", token);\n    // }, []);\n    //\n    // const joinVideoRoom = async (roomName, token) => {\n    //     const room = await Video.connect(token, {\n    //         room: roomName,\n    //     });\n    //     return room;\n    // };\n\n    const { connect } = require('twilio-video');\n\n    connect('eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImN0eSI6InR3aWxpby1mcGE7dj0xIn0.eyJpc3MiOiJTS2EwNGExZDliYjFkMGRjMmMzZWUxZDk3YjNiZjc5MDcyIiwiZXhwIjoxNzAwMzk0NTQ1LCJqdGkiOiJTS2EwNGExZDliYjFkMGRjMmMzZWUxZDk3YjNiZjc5MDcyLTE3MDAzOTA5NDUiLCJzdWIiOiJBQzRhMDlmYzBhZjk5NWYzMTE0MjJiMmM4OWY0MjI2OTZlIiwiZ3JhbnRzIjp7ImlkZW50aXR5IjoidXNlciIsInZpZGVvIjp7InJvb20iOiJyb29tLTEifX19.Fx9yalcNvpzchek0hFxix5DNejpF-Ru9ORwLpMgqubA', \n        { name:'RM318e2dd0552262c29c84ea1d29a7654f' }).then(room => {\n        console.log(`Successfully joined a Room: ${room}`);\n        room.on('participantConnected', participant => {\n            console.log(`A remote Participant connected: ${participant}`);\n        });\n    }, error => {\n        console.error(`Unable to connect to Room: ${error.message}`);\n    });\n\n    return (\n        <div>\n            <h1>Twilio Video Token</h1>\n        </div>\n    );\n};\n\nexport default TwilioVideo;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,cAAc;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM;IAAEC;EAAQ,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;EAE3CD,OAAO,CAAC,8YAA8Y,EAClZ;IAAEE,IAAI,EAAC;EAAqC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;IAC5DC,OAAO,CAACC,GAAG,CAAE,+BAA8BF,IAAK,EAAC,CAAC;IAClDA,IAAI,CAACG,EAAE,CAAC,sBAAsB,EAAEC,WAAW,IAAI;MAC3CH,OAAO,CAACC,GAAG,CAAE,mCAAkCE,WAAY,EAAC,CAAC;IACjE,CAAC,CAAC;EACN,CAAC,EAAEC,KAAK,IAAI;IACRJ,OAAO,CAACI,KAAK,CAAE,8BAA6BA,KAAK,CAACC,OAAQ,EAAC,CAAC;EAChE,CAAC,CAAC;EAEF,oBACIZ,OAAA;IAAAa,QAAA,eACIb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEd,CAAC;AAACC,EAAA,GA3CIjB,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}