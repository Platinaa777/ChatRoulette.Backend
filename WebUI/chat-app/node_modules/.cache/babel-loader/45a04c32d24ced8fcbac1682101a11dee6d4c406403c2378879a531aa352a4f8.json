{"ast":null,"code":"'use strict';\n\nvar _a = require('../webrtc/util'),\n  guessBrowser = _a.guessBrowser,\n  isWebRTCSupported = _a.support;\nvar getSdpFormat = require('../webrtc/util/sdp').getSdpFormat;\nvar _b = require('./browserdetection'),\n  isAndroid = _b.isAndroid,\n  isMobile = _b.isMobile,\n  isNonChromiumEdge = _b.isNonChromiumEdge,\n  rebrandedChromeBrowser = _b.rebrandedChromeBrowser,\n  mobileWebKitBrowser = _b.mobileWebKitBrowser;\nvar SUPPORTED_CHROME_BASED_BROWSERS = ['crios', 'edg', 'edge', 'electron', 'headlesschrome'];\nvar SUPPORTED_ANDROID_BROWSERS = ['chrome', 'firefox'];\nvar SUPPORTED_IOS_BROWSERS = ['chrome', 'safari'];\n// Currently none. Add 'brave', 'edg', and 'edge' here once we start supporting them\nvar SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS = [];\n/**\n * Check if the current browser is officially supported by twilio-video.js.\n * @returns {boolean}\n */\nfunction isSupported() {\n  var browser = guessBrowser();\n  // NOTE (csantos): Return right away if there is no browser detected\n  // to prevent unnecessary checks which could lead to errors\n  if (!browser) {\n    return false;\n  }\n  var rebrandedChrome = rebrandedChromeBrowser(browser);\n  var mobileWebKit = mobileWebKitBrowser(browser);\n  var supportedMobileBrowsers = isAndroid() ? SUPPORTED_ANDROID_BROWSERS : SUPPORTED_IOS_BROWSERS;\n  return !!browser && isWebRTCSupported() && getSdpFormat() === 'unified' && (!rebrandedChrome || SUPPORTED_CHROME_BASED_BROWSERS.includes(rebrandedChrome)) && !isNonChromiumEdge(browser) && (!mobileWebKit || SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS.includes(mobileWebKit)) && (!isMobile() || supportedMobileBrowsers.includes(browser));\n}\nmodule.exports = isSupported;","map":{"version":3,"names":["_a","require","guessBrowser","isWebRTCSupported","support","getSdpFormat","_b","isAndroid","isMobile","isNonChromiumEdge","rebrandedChromeBrowser","mobileWebKitBrowser","SUPPORTED_CHROME_BASED_BROWSERS","SUPPORTED_ANDROID_BROWSERS","SUPPORTED_IOS_BROWSERS","SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS","isSupported","browser","rebrandedChrome","mobileWebKit","supportedMobileBrowsers","includes","module","exports"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/node_modules/twilio-video/lib/util/support.js"],"sourcesContent":["'use strict';\n\nconst { guessBrowser, support: isWebRTCSupported } = require('../webrtc/util');\nconst { getSdpFormat } = require('../webrtc/util/sdp');\nconst { isAndroid, isMobile, isNonChromiumEdge, rebrandedChromeBrowser, mobileWebKitBrowser } = require('./browserdetection');\n\nconst SUPPORTED_CHROME_BASED_BROWSERS = [\n  'crios',\n  'edg',\n  'edge',\n  'electron',\n  'headlesschrome'\n];\nconst SUPPORTED_ANDROID_BROWSERS = [\n  'chrome',\n  'firefox'\n];\nconst SUPPORTED_IOS_BROWSERS = [\n  'chrome',\n  'safari'\n];\n// Currently none. Add 'brave', 'edg', and 'edge' here once we start supporting them\nconst SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS = [];\n\n/**\n * Check if the current browser is officially supported by twilio-video.js.\n * @returns {boolean}\n */\nfunction isSupported() {\n  const browser = guessBrowser();\n\n  // NOTE (csantos): Return right away if there is no browser detected\n  // to prevent unnecessary checks which could lead to errors\n  if (!browser) {\n    return false;\n  }\n\n  const rebrandedChrome = rebrandedChromeBrowser(browser);\n  const mobileWebKit = mobileWebKitBrowser(browser);\n  const supportedMobileBrowsers = isAndroid() ?\n    SUPPORTED_ANDROID_BROWSERS : SUPPORTED_IOS_BROWSERS;\n\n  return !!browser\n    && isWebRTCSupported()\n    && getSdpFormat() === 'unified'\n    && (!rebrandedChrome || SUPPORTED_CHROME_BASED_BROWSERS.includes(rebrandedChrome))\n    && !isNonChromiumEdge(browser)\n    && (!mobileWebKit || SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS.includes(mobileWebKit))\n    && (!isMobile() || supportedMobileBrowsers.includes(browser));\n}\n\nmodule.exports = isSupported;\n"],"mappings":"AAAA,YAAY;;AAEN,IAAAA,EAAA,GAA+CC,OAAO,CAAC,gBAAgB,CAAC;EAAtEC,YAAY,GAAAF,EAAA,CAAAE,YAAA;EAAWC,iBAAiB,GAAAH,EAAA,CAAAI,OAA8B;AACtE,IAAAC,YAAY,GAAKJ,OAAO,CAAC,oBAAoB,CAAC,CAAAI,YAAlC;AACd,IAAAC,EAAA,GAA0FL,OAAO,CAAC,oBAAoB,CAAC;EAArHM,SAAS,GAAAD,EAAA,CAAAC,SAAA;EAAEC,QAAQ,GAAAF,EAAA,CAAAE,QAAA;EAAEC,iBAAiB,GAAAH,EAAA,CAAAG,iBAAA;EAAEC,sBAAsB,GAAAJ,EAAA,CAAAI,sBAAA;EAAEC,mBAAmB,GAAAL,EAAA,CAAAK,mBAAkC;AAE7H,IAAMC,+BAA+B,GAAG,CACtC,OAAO,EACP,KAAK,EACL,MAAM,EACN,UAAU,EACV,gBAAgB,CACjB;AACD,IAAMC,0BAA0B,GAAG,CACjC,QAAQ,EACR,SAAS,CACV;AACD,IAAMC,sBAAsB,GAAG,CAC7B,QAAQ,EACR,QAAQ,CACT;AACD;AACA,IAAMC,sCAAsC,GAAG,EAAE;AAEjD;;;;AAIA,SAASC,WAAWA,CAAA;EAClB,IAAMC,OAAO,GAAGf,YAAY,EAAE;EAE9B;EACA;EACA,IAAI,CAACe,OAAO,EAAE;IACZ,OAAO,KAAK;;EAGd,IAAMC,eAAe,GAAGR,sBAAsB,CAACO,OAAO,CAAC;EACvD,IAAME,YAAY,GAAGR,mBAAmB,CAACM,OAAO,CAAC;EACjD,IAAMG,uBAAuB,GAAGb,SAAS,EAAE,GACzCM,0BAA0B,GAAGC,sBAAsB;EAErD,OAAO,CAAC,CAACG,OAAO,IACXd,iBAAiB,EAAE,IACnBE,YAAY,EAAE,KAAK,SAAS,KAC3B,CAACa,eAAe,IAAIN,+BAA+B,CAACS,QAAQ,CAACH,eAAe,CAAC,CAAC,IAC/E,CAACT,iBAAiB,CAACQ,OAAO,CAAC,KAC1B,CAACE,YAAY,IAAIJ,sCAAsC,CAACM,QAAQ,CAACF,YAAY,CAAC,CAAC,KAC/E,CAACX,QAAQ,EAAE,IAAIY,uBAAuB,CAACC,QAAQ,CAACJ,OAAO,CAAC,CAAC;AACjE;AAEAK,MAAM,CAACC,OAAO,GAAGP,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}