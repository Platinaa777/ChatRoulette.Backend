{"ast":null,"code":"var _jsxFileName = \"/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/src/components/TwilioVideo.jsx\",\n  _s = $RefreshSig$();\nimport Video from 'twilio-video';\nimport axios from 'axios';\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TwilioVideo = () => {\n  _s();\n  const {\n    connect\n  } = require('twilio-video');\n  const [token, setToken] = useState('');\n  const [room, setRoom] = useState('');\n  const CreateRoom = async () => {\n    const response = axios.get('http://localhost:8003/Chat/create-room').then(x => {\n      console.log(x.data);\n      setRoom(x.data.room);\n    });\n  };\n  useEffect(() => {\n    const fetchToken = async () => {\n      try {\n        const response = await axios.get('http://localhost:8003/Chat/get-access-token');\n        setToken(response.data);\n        console.log(token);\n      } catch (error) {\n        console.error('Error fetching token:', error);\n      }\n    };\n    fetchToken();\n\n    // const x = joinVideoRoom(\"room-1\", token);\n  }, []);\n\n  // const joinVideoRoom = async (roomName, token) => {\n  //     const room = await Video.connect(token, {\n  //         room: roomName,\n  //     });\n  //     return room;\n  // };\n\n  connect(token, {\n    name: 'room-1'\n  }).then(room => {\n    console.log(`Successfully joined a Room: ${room}`);\n    room.on('participantConnected', participant => {\n      console.log(`A remote Participant connected: ${participant}`);\n    });\n  }, error => {\n    console.error(`Unable to connect to Room: ${error.message}`);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Twilio Video Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => CreateRoom(),\n        children: \"Create room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), room == '' ? \"\" : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Name of room: \", room]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => GetAccessToken(),\n        children: \"Get token to special room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(TwilioVideo, \"/hMXNyyZl57rJDv72/mipa8qjuk=\");\n_c = TwilioVideo;\nexport default TwilioVideo;\nvar _c;\n$RefreshReg$(_c, \"TwilioVideo\");","map":{"version":3,"names":["Video","axios","React","useState","useEffect","jsxDEV","_jsxDEV","TwilioVideo","_s","connect","require","token","setToken","room","setRoom","CreateRoom","response","get","then","x","console","log","data","fetchToken","error","name","on","participant","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","GetAccessToken","_c","$RefreshReg$"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/src/components/TwilioVideo.jsx"],"sourcesContent":["import Video from 'twilio-video';\nimport axios from 'axios';\nimport React from \"react\";\nimport {useState, useEffect} from \"react\";\n\nconst TwilioVideo = () => {\n    const { connect } = require('twilio-video');\n    const [token, setToken] = useState('');\n    const [room, setRoom] = useState('');\n    \n    const CreateRoom = async () => {\n        const response = axios.get('http://localhost:8003/Chat/create-room')\n            .then(x => {\n                console.log(x.data)\n                setRoom(x.data.room)\n            });\n    }\n    \n    useEffect(() => {\n        const fetchToken = async () => {\n            try {\n                const response = await axios.get('http://localhost:8003/Chat/get-access-token');\n                setToken(response.data);\n                console.log(token);\n            } catch (error) {\n                console.error('Error fetching token:', error);\n            }\n        };\n\n        fetchToken();\n\n        // const x = joinVideoRoom(\"room-1\", token);\n    }, []);\n\n    // const joinVideoRoom = async (roomName, token) => {\n    //     const room = await Video.connect(token, {\n    //         room: roomName,\n    //     });\n    //     return room;\n    // };\n\n   \n\n    connect(token, \n        { name:'room-1' }).then(room => {\n        console.log(`Successfully joined a Room: ${room}`);\n        room.on('participantConnected', participant => {\n            console.log(`A remote Participant connected: ${participant}`);\n        });\n    }, error => {\n        console.error(`Unable to connect to Room: ${error.message}`);\n    });\n\n    return (\n        <div>\n            <h1>Twilio Video Token</h1>\n            <h1>\n                <button onClick={() => CreateRoom()}>Create room</button>\n            </h1>\n            {\n                room == '' ? \n                    \"\"\n                    :\n                    <div>Name of room: {room}</div>\n            }\n            <h1>\n                <button onClick={() => GetAccessToken()}>Get token to special room</button>\n            </h1>\n        </div>\n    );\n};\n\nexport default TwilioVideo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}