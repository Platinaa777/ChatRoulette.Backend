{"ast":null,"code":"'use strict';\n\nvar CancelablePromise = require('./util/cancelablepromise');\n/**\n * Create a {@link CancelablePromise<Room>}.\n * @param {function(function(Array<LocalTrack>): CancelablePromise<RoomSignaling>):\n *   Promise<function(): CancelablePromise<RoomSignaling>>} getLocalTracks\n * @param {function(Array<LocalTrack>): LocalParticipant} createLocalParticipant\n * @param {function(Array<LocalTrack>): CancelablePromise<RoomSignaling>} createRoomSignaling\n * @param {function(LocalParticipant, RoomSignaling): Room} createRoom\n * @returns CancelablePromise<Room>\n */\nfunction createCancelableRoomPromise(getLocalTracks, createLocalParticipant, createRoomSignaling, createRoom) {\n  var cancelableRoomSignalingPromise;\n  var cancellationError = new Error('Canceled');\n  return new CancelablePromise(function onCreate(resolve, reject, isCanceled) {\n    var localParticipant;\n    getLocalTracks(function getLocalTracksSucceeded(localTracks) {\n      if (isCanceled()) {\n        return CancelablePromise.reject(cancellationError);\n      }\n      localParticipant = createLocalParticipant(localTracks);\n      return createRoomSignaling(localParticipant).then(function createRoomSignalingSucceeded(getCancelableRoomSignalingPromise) {\n        if (isCanceled()) {\n          throw cancellationError;\n        }\n        cancelableRoomSignalingPromise = getCancelableRoomSignalingPromise();\n        return cancelableRoomSignalingPromise;\n      });\n    }).then(function roomSignalingConnected(roomSignaling) {\n      if (isCanceled()) {\n        roomSignaling.disconnect();\n        throw cancellationError;\n      }\n      resolve(createRoom(localParticipant, roomSignaling));\n    }).catch(function onError(error) {\n      reject(error);\n    });\n  }, function onCancel() {\n    if (cancelableRoomSignalingPromise) {\n      cancelableRoomSignalingPromise.cancel();\n    }\n  });\n}\nmodule.exports = createCancelableRoomPromise;","map":{"version":3,"names":["CancelablePromise","require","createCancelableRoomPromise","getLocalTracks","createLocalParticipant","createRoomSignaling","createRoom","cancelableRoomSignalingPromise","cancellationError","Error","onCreate","resolve","reject","isCanceled","localParticipant","getLocalTracksSucceeded","localTracks","then","createRoomSignalingSucceeded","getCancelableRoomSignalingPromise","roomSignalingConnected","roomSignaling","disconnect","catch","onError","error","onCancel","cancel","module","exports"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/node_modules/twilio-video/lib/cancelableroompromise.js"],"sourcesContent":["'use strict';\n\nconst CancelablePromise = require('./util/cancelablepromise');\n\n/**\n * Create a {@link CancelablePromise<Room>}.\n * @param {function(function(Array<LocalTrack>): CancelablePromise<RoomSignaling>):\n *   Promise<function(): CancelablePromise<RoomSignaling>>} getLocalTracks\n * @param {function(Array<LocalTrack>): LocalParticipant} createLocalParticipant\n * @param {function(Array<LocalTrack>): CancelablePromise<RoomSignaling>} createRoomSignaling\n * @param {function(LocalParticipant, RoomSignaling): Room} createRoom\n * @returns CancelablePromise<Room>\n */\nfunction createCancelableRoomPromise(getLocalTracks, createLocalParticipant, createRoomSignaling, createRoom) {\n  let cancelableRoomSignalingPromise;\n  const cancellationError = new Error('Canceled');\n\n  return new CancelablePromise(function onCreate(resolve, reject, isCanceled) {\n    let localParticipant;\n    getLocalTracks(function getLocalTracksSucceeded(localTracks) {\n      if (isCanceled()) {\n        return CancelablePromise.reject(cancellationError);\n      }\n      localParticipant = createLocalParticipant(localTracks);\n      return createRoomSignaling(localParticipant).then(function createRoomSignalingSucceeded(getCancelableRoomSignalingPromise) {\n        if (isCanceled()) {\n          throw cancellationError;\n        }\n        cancelableRoomSignalingPromise = getCancelableRoomSignalingPromise();\n        return cancelableRoomSignalingPromise;\n      });\n    }).then(function roomSignalingConnected(roomSignaling) {\n      if (isCanceled()) {\n        roomSignaling.disconnect();\n        throw cancellationError;\n      }\n      resolve(createRoom(localParticipant, roomSignaling));\n    }).catch(function onError(error) {\n      reject(error);\n    });\n  }, function onCancel() {\n    if (cancelableRoomSignalingPromise) {\n      cancelableRoomSignalingPromise.cancel();\n    }\n  });\n}\n\nmodule.exports = createCancelableRoomPromise;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,0BAA0B,CAAC;AAE7D;;;;;;;;;AASA,SAASC,2BAA2BA,CAACC,cAAc,EAAEC,sBAAsB,EAAEC,mBAAmB,EAAEC,UAAU;EAC1G,IAAIC,8BAA8B;EAClC,IAAMC,iBAAiB,GAAG,IAAIC,KAAK,CAAC,UAAU,CAAC;EAE/C,OAAO,IAAIT,iBAAiB,CAAC,SAASU,QAAQA,CAACC,OAAO,EAAEC,MAAM,EAAEC,UAAU;IACxE,IAAIC,gBAAgB;IACpBX,cAAc,CAAC,SAASY,uBAAuBA,CAACC,WAAW;MACzD,IAAIH,UAAU,EAAE,EAAE;QAChB,OAAOb,iBAAiB,CAACY,MAAM,CAACJ,iBAAiB,CAAC;;MAEpDM,gBAAgB,GAAGV,sBAAsB,CAACY,WAAW,CAAC;MACtD,OAAOX,mBAAmB,CAACS,gBAAgB,CAAC,CAACG,IAAI,CAAC,SAASC,4BAA4BA,CAACC,iCAAiC;QACvH,IAAIN,UAAU,EAAE,EAAE;UAChB,MAAML,iBAAiB;;QAEzBD,8BAA8B,GAAGY,iCAAiC,EAAE;QACpE,OAAOZ,8BAA8B;MACvC,CAAC,CAAC;IACJ,CAAC,CAAC,CAACU,IAAI,CAAC,SAASG,sBAAsBA,CAACC,aAAa;MACnD,IAAIR,UAAU,EAAE,EAAE;QAChBQ,aAAa,CAACC,UAAU,EAAE;QAC1B,MAAMd,iBAAiB;;MAEzBG,OAAO,CAACL,UAAU,CAACQ,gBAAgB,EAAEO,aAAa,CAAC,CAAC;IACtD,CAAC,CAAC,CAACE,KAAK,CAAC,SAASC,OAAOA,CAACC,KAAK;MAC7Bb,MAAM,CAACa,KAAK,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,SAASC,QAAQA,CAAA;IAClB,IAAInB,8BAA8B,EAAE;MAClCA,8BAA8B,CAACoB,MAAM,EAAE;;EAE3C,CAAC,CAAC;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG3B,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}