{"ast":null,"code":"var _jsxFileName = \"/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/src/components/TwilioVideo.jsx\",\n  _s = $RefreshSig$();\nimport Video, { connect, createLocalVideoTrack } from 'twilio-video';\nimport axios from 'axios';\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport '../styles/TwilioVideo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TwilioVideo = () => {\n  _s();\n  const {\n    connect\n  } = require('twilio-video');\n  const [token, setToken] = useState('');\n  const [localVideoTrack, setLocalVideoTrack] = useState(null);\n\n  // useEffect(() => {\n  //     // Получаем доступ к медиапотокам браузера\n  //     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n  //         .then(mediaStream => {\n  //             // Создаем видео трек из медиапотока\n  //             const videoTrack = new Video.LocalVideoTrack(mediaStream.getVideoTracks()[0]);\n  //             setLocalVideoTrack(videoTrack);\n  //         })\n  //         .catch(error => {\n  //             console.error('Error accessing media devices:', error);\n  //         });\n  // }, []);\n\n  const ShowVideo = () => {\n    createLocalVideoTrack().then(track => {\n      const localMediaContainer = document.getElementById('local-media');\n      localMediaContainer.appendChild(track.attach());\n    });\n  };\n  const ConnectTo = async () => {\n    const response = await fetch(`http://localhost:8003/Chat/find-room`);\n    if (!response.ok) {\n      console.error(`Unable to connect to Room: ${response.message}`);\n    }\n    const jsonData = await response.json();\n    if (!jsonData.isValid) {\n      console.error(jsonData.message);\n    }\n    setToken(jsonData.accessToken);\n    console.log(token);\n    console.log(jsonData);\n    connect(token, {\n      name: jsonData.RoomName\n    }).then(room => {\n      console.log(`Successfully joined a Room: ${room}`);\n      room.on('participantConnected', participant => {\n        console.log(`A remote Participant connected: ${participant}`);\n      });\n    }, error => {\n      console.error(`Unable to connect to Room: ${error.message}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Twilio Video Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => ConnectTo(),\n        children: \"Connect to Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"local-media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(TwilioVideo, \"AIfwwPNQvVPgth38b8/aOeX1Nf8=\");\n_c = TwilioVideo;\nexport default TwilioVideo;\nvar _c;\n$RefreshReg$(_c, \"TwilioVideo\");","map":{"version":3,"names":["Video","connect","createLocalVideoTrack","axios","React","useState","useEffect","jsxDEV","_jsxDEV","TwilioVideo","_s","require","token","setToken","localVideoTrack","setLocalVideoTrack","ShowVideo","then","track","localMediaContainer","document","getElementById","appendChild","attach","ConnectTo","response","fetch","ok","console","error","message","jsonData","json","isValid","accessToken","log","name","RoomName","room","on","participant","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["/home/denis/RiderProjects/ChatRoulette/WebUI/chat-app/src/components/TwilioVideo.jsx"],"sourcesContent":["import Video, {connect, createLocalVideoTrack} from 'twilio-video';\nimport axios from 'axios';\nimport React from \"react\";\nimport {useState, useEffect} from \"react\";\nimport '../styles/TwilioVideo.css'\n\nconst TwilioVideo = () => {\n    const { connect } = require('twilio-video');\n    const [token, setToken] = useState('');\n    const [localVideoTrack, setLocalVideoTrack] = useState(null);\n\n    // useEffect(() => {\n    //     // Получаем доступ к медиапотокам браузера\n    //     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n    //         .then(mediaStream => {\n    //             // Создаем видео трек из медиапотока\n    //             const videoTrack = new Video.LocalVideoTrack(mediaStream.getVideoTracks()[0]);\n    //             setLocalVideoTrack(videoTrack);\n    //         })\n    //         .catch(error => {\n    //             console.error('Error accessing media devices:', error);\n    //         });\n    // }, []);\n\n    const ShowVideo = () => {\n        \n        createLocalVideoTrack().then(track => {\n            const localMediaContainer = document.getElementById('local-media');\n            localMediaContainer.appendChild(track.attach());\n        });\n    }\n    \n    const ConnectTo = async () => {\n        \n        const response = await fetch(`http://localhost:8003/Chat/find-room`);\n        \n        if (!response.ok) {\n            console.error(`Unable to connect to Room: ${response.message}`);\n        }\n        \n        const jsonData = await response.json()\n        \n        if (!jsonData.isValid) {\n            console.error(jsonData.message);\n        }\n        \n        setToken(jsonData.accessToken);\n        console.log(token);\n        console.log(jsonData)\n        \n        connect(token, { name: jsonData.RoomName })\n            .then(room => {\n                console.log(`Successfully joined a Room: ${room}`);\n                room.on('participantConnected', participant => {\n                console.log(`A remote Participant connected: ${participant}`);\n            });\n            }, error => {\n            console.error(`Unable to connect to Room: ${error.message}`);\n        });\n    }\n   \n    return (\n        <div>\n            <h1>Twilio Video Token</h1>\n            \n            <h1>\n                <button onClick={() => ConnectTo()}>Connect to Room</button>\n            </h1>\n            {/*<div id=\"video-container\">*/}\n            {/*    {localVideoTrack && <video ref={ref => localVideoTrack.attach(ref)} autoPlay={true} controls={true}></video>}*/}\n            {/*</div>*/}\n            <div id=\"local-media\">\n                \n            </div>\n        </div>\n    );\n};\n\nexport default TwilioVideo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}